version: '3.8'

services:
  # aq3cms 应用服务
  aq3cms:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aq3cms-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=aq3cms
      - DB_PASSWORD=aq3cms123
      - DB_NAME=aq3cms
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis123
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aq3cms-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: aq3cms-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: aq3cms
      MYSQL_USER: aq3cms
      MYSQL_PASSWORD: aq3cms123
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/aq3cms.sql:/docker-entrypoint-initdb.d/01-aq3cms.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - aq3cms-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: aq3cms-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - aq3cms-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: aq3cms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
      - ./static:/var/www/static
    depends_on:
      - aq3cms
    networks:
      - aq3cms-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  aq3cms-network:
    driver: bridge
